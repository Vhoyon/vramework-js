name: CI/CD

on:
  push:
    branches: [ master, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install
      run: npm ci
        
    - name: Lint
      run: npm run lint
      
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install
      run: npm ci
        
    - name: Build
      run: npm run build
        
    - name: Test
      run: npm test
      
  publish-if-version-changed:
    needs: ["lint", "build-and-test"]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install
      run: npm ci
        
    - name: Publish to npm
      id: publish
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_AUTH_TOKEN }}
        
    - if: steps.publish.type == 'none' || steps.publish.outputs.old-version == steps.publish.outputs.version
      name: "Version hasn't changed, no new package published!"
      run: |
        echo "Version hasn't changed, no new package published!"
        
    - if: steps.publish.type != 'none' && steps.publish.outputs.old-version != steps.publish.outputs.version
      name: "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
      run: |
        echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
        
    - if: steps.publish.type != 'none' && steps.publish.outputs.old-version != steps.publish.outputs.version
      name: Tag if published successfully
      uses: tvdias/github-tagger@v0.0.2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        tag: "v${{ steps.publish.outputs.version }}"